frameworkVersion: "3.32.2"
service: foxscript-task

useDotenv: true

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-fargate
  - serverless-vpc-plugin

custom:
  stage: ${opt:stage, self:provider.stage}

  bucket_name: foxscript-content-${self:custom.stage}

  serverless-offline:
    lambdaPort: 3003
    httpPort: 3006

  # VPC
  vpcConfig:
    vpcEnabled:
      oxpecker-auto: true

    enabled: true
 
    cidrBlock: '10.0.0.0/16'
 
    # if createNatGateway is a boolean "true", a NAT Gateway and EIP will be provisioned in each zone
    # if createNatGateway is a number, that number of NAT Gateways will be provisioned
    createNatGateway: false
 
    # When enabled, the DB subnet will only be accessible from the Application subnet
    # Both the Public and Application subnets will be accessible from 0.0.0.0/0
    createNetworkAcl: true
 
    # Whether to create the DB subnet
    createDbSubnet: false
 
    # Whether to enable VPC flow logging to an S3 bucket
    createFlowLogs: false
 
    # Whether to create a bastion host
    createBastionHost: false
    bastionHostKeyName: MyKey # required if creating a bastion host
 
    # Whether to create a NAT instance
    createNatInstance: true
 
    # Whether to create AWS Systems Manager (SSM) Parameters
    createParameters: true
 
    # Optionally specify AZs (defaults to auto-discover all availabile AZs)
    zones:
      - us-east-1a
      - us-east-1b
      - us-east-1c
 
    # By default, S3 and DynamoDB endpoints will be available within the VPC
    # see https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html
    # for a list of available service endpoints to provision within the VPC
    # (varies per region)
    #services:
    #  - ecs
    #  - ecs-agent
    #  - ecs-telemetry
    #  - lambda
    #  - ecr.dkr
    #  - ecr.api
    #  - logs
    #  - ssm
 
    # Whether to export stack outputs so it may be consumed by other stacks
    exportOutputs: true

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!package-lock.json'
    - '!package.json'
    - foxscript_api.py
    - hollywood_writer.py
    - ../utils/**

provider:
  name: aws
  stage: dev
  region: us-east-1
  lambdaHashingVersion: 20201221
  apiGateway:
    restApiId:
      'Fn::ImportValue': foxscript-${self:custom.stage}-ApiGateway-restApiId
    restApiRootResourceId:
      'Fn::ImportValue': foxscript-${self:custom.stage}-ApiGateway-rootResourceId
  ecr:
    images:
      task_image:
        path: ..
        file: task.Dockerfile

  environment:
    SERVICE: ${self:service}
    STAGE: ${self:custom.stage}
    WEAVIATE_URL: ${env:WEAVIATE_URL}
    WEAVIATE_API_KEY: ${env:WEAVIATE_API_KEY}
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    OPENAI_ORGANIZATION: ${env:OPENAI_ORGANIZATION}
    SERPER_API_KEY: ${env:SERPER_API_KEY}
    WP_API_KEY: ${env:WP_API_KEY}

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            # Lambda Actions
            - 'lambda:InvokeFunction'
            - 'lambda:InvokeAsync'
            # S3 Actions
            - 's3:PutObject'
            - 's3:GetObject'
            - 's3:DeleteObject'
            - 's3:ListBucket'
            # ECS Actions
            - 'ecs:*'
            # ECR Actions
            - 'ecr.dkr:*'
            - 'ecr.api:*'
            - 'ecr:*'
            - 'logs:*'
            - 'ssm:*'
            - 'iam:*'
            - 'cloudformation:*'
            - 'sqs:*'
          Resource: '*'
        - Effect: Allow
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: '*'

fargate:
  tasks:
    foxscript:
      name: 'foxscript-${self:custom.stage}'
      image: task_image
      memory: '4GB'
      cpu: 1024
      command:
        - foxscript.py
      environment:
        STAGE: ${self:custom.stage}
        WEAVIATE_URL: ${env:WEAVIATE_URL}
        WEAVIATE_API_KEY: ${env:WEAVIATE_API_KEY}
        OPENAI_API_KEY: ${env:OPENAI_API_KEY}
        OPENAI_ORGANIZATION: ${env:OPENAI_ORGANIZATION}
        SERPER_API_KEY: ${env:SERPER_API_KEY}
        WP_API_KEY: ${env:WP_API_KEY}
        BUCKET: ${self:custom.bucket_name}
      schedule: 'rate(365 days)'
      vpc:
        assignPublicIp: true

functions:
  foxscript:
    runtime: python3.9
    handler: foxscript_api.handler
    memorySize: 256
    timeout: 300
    maximumRetryAttempts: 0
    events:
      - http:
          path: foxscript
          method: post
          cors: true